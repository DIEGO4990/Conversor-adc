#include <WiFi.h>
#include <esp_now.h>

#define POT_PIN 34

uint8_t slaveMac[] = {0x48, 0xe7, 0x29, 0x99, 0x9a, 0xbc}; // Substitua se necessÃ¡rio

void setup() {
  Serial.begin(115200);
  WiFi.mode(WIFI_STA);

  if (esp_now_init() != ESP_OK) {
    Serial.println("Erro ao iniciar ESP-NOW");
    return;
  }

  esp_now_peer_info_t peerInfo = {};
  memcpy(peerInfo.peer_addr, slaveMac, 6);
  peerInfo.channel = 0;
  peerInfo.encrypt = false;

  if (esp_now_add_peer(&peerInfo) != ESP_OK) {
    Serial.println("Erro ao adicionar peer");
    return;
  }

  Serial.println("Mestre pronto.");
}

void loop() {
  int val = analogRead(POT_PIN);
  const char* cmd = (val > 2048) ? "ON" : "OFF";

  esp_err_t result = esp_now_send(slaveMac, (uint8_t *)cmd, strlen(cmd));
  if (result == ESP_OK) {
    Serial.print("Enviado: ");
    Serial.println(cmd);
  } else {
    Serial.println("Erro ao enviar dados");
  }

  delay(200);
}
